#!/bin/bash
# ==========================================
# netkeiba „Çπ„ÇØ„É¨„Ç§„Éî„É≥„Ç∞Ëá™ÂãïÈÅãÁî®„Çπ„ÇØ„É™„Éó„Éà
# ==========================================

PYTHON="/usr/bin/python3"
SCRIPT="scraper.py"
LOG="batch.log"
HORSE_COUNT=150000
BATCH_SIZE=1000
WAIT_MIN=600   # „Éê„ÉÉ„ÉÅÈñì„ÅÆÊúÄÂ∞èÂæÖÊ©üÔºàÁßíÔºâ=10ÂàÜ
WAIT_MAX=1200  # „Éê„ÉÉ„ÉÅÈñì„ÅÆÊúÄÂ§ßÂæÖÊ©üÔºàÁßíÔºâ=20ÂàÜ
PROGRESS_FILE=".progress"

# --- ÈÄ≤Êçó„Çí„É≠„Éº„Éâ ---
if [ -f "$PROGRESS_FILE" ]; then
  START=$(cat "$PROGRESS_FILE")
else
  START=1
fi

echo "Start index: $START"

# --- „É°„Ç§„É≥„É´„Éº„Éó ---
while [ $START -le $HORSE_COUNT ]; do
  END=$((START + BATCH_SIZE - 1))
  if [ $END -gt $HORSE_COUNT ]; then
    END=$HORSE_COUNT
  fi

  echo "============================" | tee -a $LOG
  echo "$(date '+%F %T')  Running batch: $START - $END" | tee -a $LOG

  $PYTHON $SCRIPT --start $START --end $END >> $LOG 2>&1
  RESULT=$?

  if [ $RESULT -eq 0 ]; then
    echo "$(date '+%F %T')  ‚úÖ Batch completed: $START - $END" | tee -a $LOG
    START=$((END + 1))
    echo $START > $PROGRESS_FILE
  else
    echo "$(date '+%F %T')  ‚ùå Error detected, pausing 15 minutes..." | tee -a $LOG
    sleep 900
    continue
  fi

  WAIT=$((WAIT_MIN + RANDOM % (WAIT_MAX - WAIT_MIN)))
  echo "$(date '+%F %T')  Waiting $WAIT seconds before next batch..." | tee -a $LOG
  sleep $WAIT
done

echo "$(date '+%F %T')  üéâ All scraping finished!" | tee -a $LOG
